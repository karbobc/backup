name: Build CI

on:
  push:
    tags: [ "v*" ]
    branches: [ "master" ]
  workflow_dispatch:

env:
  VERSION: v0.3.2

permissions:
  contents: write

jobs:
  build-for-macos:
    name: Build for ${{ matrix.job.target }}
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        job:
          - { target: "x86_64-apple-darwin" }
          - { target: "aarch64-apple-darwin" }
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: ${{ matrix.job.target }}

      - name: Build target
        uses: houseabsolute/actions-rust-cross@v1
        with:
          command: build
          args: --release --locked
          target: ${{ matrix.job.target }}
          strip: false

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.job.target }}-artifact
          path: target/${{ matrix.job.target }}/release/backup
          if-no-files-found: error

      - name: Archive binary
        if: startsWith(github.ref, 'refs/tags/')
        shell: bash
        run: |
          pushd target/${{ matrix.job.target }}/release
          tar -zcvf backup-${{ env.VERSION }}.${{ matrix.job.target }}.tar.gz backup
          shasum -a 256 backup-${{ env.VERSION }}.${{ matrix.job.target }}.tar.gz > backup-${{ env.VERSION }}.${{ matrix.job.target }}.tar.gz.sha256
          popd

      - name: Upload to GitHub release
        uses: softprops/action-gh-release@v2
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          files: |
            target/${{ matrix.job.target }}/release/backup-*.tar.gz*
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}
          generate_release_notes: true

  build-for-windows:
    name: Build for ${{ matrix.job.target }}
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        job:
          - { target: "x86_64-pc-windows-msvc" }
          - { target: "i686-pc-windows-msvc" }
          - { target: "aarch64-pc-windows-msvc" }
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: ${{ matrix.job.target }}

      - name: Build target
        uses: houseabsolute/actions-rust-cross@v1
        with:
          command: build
          args: --release --locked
          target: ${{ matrix.job.target }}
          strip: false

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.job.target }}-artifact
          path: target/${{ matrix.job.target }}/release/backup.exe
          if-no-files-found: error

      - name: Archive binary
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          Push-Location target/${{ matrix.job.target }}/release
          7z a backup-${{ env.VERSION }}.${{ matrix.job.target }}.zip backup.exe
          Pop-Location

      - name: Upload to GitHub release
        uses: softprops/action-gh-release@v2
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          files: |
            target/${{ matrix.job.target }}/release/backup-*.zip
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}
          generate_release_notes: true

  build-for-linux:
    name: Build for ${{ matrix.job.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        job:
          - { target: "x86_64-unknown-linux-musl" }
          - { target: "i686-unknown-linux-musl" }
          - { target: "aarch64-unknown-linux-musl" }
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: ${{ matrix.job.target }}

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools

      - name: Build target
        uses: houseabsolute/actions-rust-cross@v1
        with:
          command: build
          args: --release --locked
          target: ${{ matrix.job.target }}
          strip: false

      - name: Upx compress binary
        uses: crazy-max/ghaction-upx@v3
        with:
          files: target/${{ matrix.job.target }}/release/backup
          args: --best --lzma

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.job.target }}-artifact
          path: target/${{ matrix.job.target }}/release/backup
          if-no-files-found: error

      - name: Archive binary
        if: startsWith(github.ref, 'refs/tags/')
        shell: bash
        run: |
          pushd target/${{ matrix.job.target }}/release
          tar -zcvf backup-${{ env.VERSION }}.${{ matrix.job.target }}.tar.gz backup
          shasum -a 256 backup-${{ env.VERSION }}.${{ matrix.job.target }}.tar.gz > backup-${{ env.VERSION }}.${{ matrix.job.target }}.tar.gz.sha256
          popd

      - name: Upload to GitHub release
        uses: softprops/action-gh-release@v2
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          files: |
            target/${{ matrix.job.target }}/release/backup-*.tar.gz*
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}
          generate_release_notes: true
